/*
   +----------------------------------------------------------------------+
   | HipHop for PHP                                                       |
   +----------------------------------------------------------------------+
   | Copyright (c) 2010 Facebook, Inc. (http://www.facebook.com)          |
   | Copyright (c) 1997-2010 The PHP Group                                |
   +----------------------------------------------------------------------+
   | This source file is subject to version 3.01 of the PHP license,      |
   | that is bundled with this package in the file LICENSE, and is        |
   | available through the world-wide-web at the following url:           |
   | http://www.php.net/license/3_01.txt                                  |
   | If you did not receive a copy of the PHP license and are unable to   |
   | obtain it through the world-wide-web, please send a note to          |
   | license@php.net so we can mail you a copy immediately.               |
   +----------------------------------------------------------------------+
*/

#ifndef __EXTPROFILE_ZIP_H__
#define __EXTPROFILE_ZIP_H__

// >>>>>> Generated by idl.php. Do NOT modify. <<<<<<

#include <runtime/ext/ext_zip.h>

namespace HPHP {
///////////////////////////////////////////////////////////////////////////////

inline void x_zip_close(CObjRef zip) {
  FUNCTION_INJECTION_BUILTIN(zip_close);
  f_zip_close(zip);
}

inline bool x_zip_entry_close(CObjRef zip_entry) {
  FUNCTION_INJECTION_BUILTIN(zip_entry_close);
  return f_zip_entry_close(zip_entry);
}

inline int64 x_zip_entry_compressedsize(CObjRef zip_entry) {
  FUNCTION_INJECTION_BUILTIN(zip_entry_compressedsize);
  return f_zip_entry_compressedsize(zip_entry);
}

inline String x_zip_entry_compressionmethod(CObjRef zip_entry) {
  FUNCTION_INJECTION_BUILTIN(zip_entry_compressionmethod);
  return f_zip_entry_compressionmethod(zip_entry);
}

inline int64 x_zip_entry_filesize(CObjRef zip_entry) {
  FUNCTION_INJECTION_BUILTIN(zip_entry_filesize);
  return f_zip_entry_filesize(zip_entry);
}

inline String x_zip_entry_name(CObjRef zip_entry) {
  FUNCTION_INJECTION_BUILTIN(zip_entry_name);
  return f_zip_entry_name(zip_entry);
}

inline bool x_zip_entry_open(CObjRef zip, CObjRef zip_entry, CStrRef mode = null_string) {
  FUNCTION_INJECTION_BUILTIN(zip_entry_open);
  return f_zip_entry_open(zip, zip_entry, mode);
}

inline Variant x_zip_entry_read(CObjRef zip_entry, int64 length = 1024) {
  FUNCTION_INJECTION_BUILTIN(zip_entry_read);
  return f_zip_entry_read(zip_entry, length);
}

inline Variant x_zip_open(CStrRef filename) {
  FUNCTION_INJECTION_BUILTIN(zip_open);
  return f_zip_open(filename);
}

inline Variant x_zip_read(CObjRef zip) {
  FUNCTION_INJECTION_BUILTIN(zip_read);
  return f_zip_read(zip);
}


///////////////////////////////////////////////////////////////////////////////
}

#endif // __EXTPROFILE_ZIP_H__
